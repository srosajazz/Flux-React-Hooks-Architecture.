{"ast":null,"code":"import _objectSpread from \"/Users/sergiorosa_local/Documents/Flux-Architecture/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { call, select, put, all, takeLatest } from 'redux-saga/effects';\nimport api from '../../../services/api';\nimport { formatPrice } from '../../../util/format';\nimport { addToCartSuccess } from './actions';\n\nfunction* addToCart({\n  id\n}) {\n  const productExists = yield select(state => state.cart.find(p => p.id === id));\n  const response = yield call(api.get, \"/products/\".concat(id));\n\n  const data = _objectSpread({}, response.data, {\n    amount: 1,\n    priceFormatted: formatPrice(response.data.price)\n  });\n\n  yield put(addToCartSuccess(data));\n}\n\nexport default all([takeLatest('@cart/ADD_REQUEST', addToCart)]);","map":{"version":3,"sources":["/Users/sergiorosa_local/Documents/Flux-Architecture/src/store/modules/cart/sagas.js"],"names":["call","select","put","all","takeLatest","api","formatPrice","addToCartSuccess","addToCart","id","productExists","state","cart","find","p","response","get","data","amount","priceFormatted","price"],"mappings":";AAAA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,UAAjC,QAAmD,oBAAnD;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAEA,SAASC,gBAAT,QAAiC,WAAjC;;AAEA,UAAUC,SAAV,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA4B;AAC1B,QAAMC,aAAa,GAAG,MAAMT,MAAM,CAACU,KAAK,IACtCA,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACL,EAAF,KAASA,EAA9B,CADgC,CAAlC;AAGA,QAAMM,QAAQ,GAAG,MAAMf,IAAI,CAACK,GAAG,CAACW,GAAL,sBAAuBP,EAAvB,EAA3B;;AAEA,QAAMQ,IAAI,qBACLF,QAAQ,CAACE,IADJ;AAERC,IAAAA,MAAM,EAAE,CAFA;AAGRC,IAAAA,cAAc,EAAEb,WAAW,CAACS,QAAQ,CAACE,IAAT,CAAcG,KAAf;AAHnB,IAAV;;AAMA,QAAMlB,GAAG,CAACK,gBAAgB,CAACU,IAAD,CAAjB,CAAT;AACD;;AAED,eAAed,GAAG,CAAC,CAACC,UAAU,CAAC,mBAAD,EAAsBI,SAAtB,CAAX,CAAD,CAAlB","sourcesContent":["import { call, select, put, all, takeLatest } from 'redux-saga/effects';\nimport api from '../../../services/api';\nimport { formatPrice } from '../../../util/format';\n\nimport { addToCartSuccess } from './actions';\n\nfunction* addToCart({ id }) {\n  const productExists = yield select(state =>\n    state.cart.find(p => p.id === id)\n  );\n  const response = yield call(api.get, `/products/${id}`);\n\n  const data = {\n    ...response.data,\n    amount: 1,\n    priceFormatted: formatPrice(response.data.price),\n  };\n\n  yield put(addToCartSuccess(data));\n}\n\nexport default all([takeLatest('@cart/ADD_REQUEST', addToCart)]);\n"]},"metadata":{},"sourceType":"module"}