{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga';\nconst sagaMonitor = process.env.NODE_ENV === 'development' ? console.tron.createSagaMonitor({\n  sagaMonitor\n}) : null;\nconst SagaMiddleware = createSagaMiddleware();\nconst enhancer = process.env.NODE_ENV === 'development' ? compose(console.tron.createEnhancer(), applyMiddleware(SagaMiddleware)) : applyMiddleware(SagaMiddleware);\nconst store = createStore(rootReducer, enhancer);\nSagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["/Users/sergiorosa_local/Documents/Flux-Architecture/src/store/index.js"],"names":["createStore","applyMiddleware","compose","createSagaMiddleware","rootReducer","rootSaga","sagaMonitor","process","env","NODE_ENV","console","tron","createSagaMonitor","SagaMiddleware","enhancer","createEnhancer","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,MAAMC,WAAW,GACfC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACIC,OAAO,CAACC,IAAR,CAAaC,iBAAb,CAA+B;AAC7BN,EAAAA;AAD6B,CAA/B,CADJ,GAII,IALN;AAMA,MAAMO,cAAc,GAAGV,oBAAoB,EAA3C;AAEA,MAAMW,QAAQ,GACZP,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACIP,OAAO,CACLQ,OAAO,CAACC,IAAR,CAAaI,cAAb,EADK,EAELd,eAAe,CAACY,cAAD,CAFV,CADX,GAKIZ,eAAe,CAACY,cAAD,CANrB;AAQA,MAAMG,KAAK,GAAGhB,WAAW,CAACI,WAAD,EAAcU,QAAd,CAAzB;AACAD,cAAc,CAACI,GAAf,CAAmBZ,QAAnB;AAEA,eAAeW,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga';\n\nconst sagaMonitor =\n  process.env.NODE_ENV === 'development'\n    ? console.tron.createSagaMonitor({\n        sagaMonitor,\n      })\n    : null;\nconst SagaMiddleware = createSagaMiddleware();\n\nconst enhancer =\n  process.env.NODE_ENV === 'development'\n    ? compose(\n        console.tron.createEnhancer(),\n        applyMiddleware(SagaMiddleware)\n      )\n    : applyMiddleware(SagaMiddleware);\n\nconst store = createStore(rootReducer, enhancer);\nSagaMiddleware.run(rootSaga);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}