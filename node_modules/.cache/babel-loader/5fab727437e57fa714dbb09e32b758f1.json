{"ast":null,"code":"import _objectSpread from \"/Users/sergiorosa_local/Documents/Flux-Architecture/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { call, select, put, all, takeLatest } from 'redux-saga/effects';\nimport api from '../../../services/api';\nimport { formatPrice } from '../../../util/format';\nimport { addToCartSuccess, updateAmount } from './actions';\n\nfunction* addToCart({\n  id\n}) {\n  const productExists = yield select(state => state.cart.find(p => p.id === id));\n  const stock = yield call(api.get, \"/stock/\".concat(id));\n  const stockAmount = stock.data.amount;\n\n  if (productExists) {\n    const amount = productExists.amount + 1;\n    yield put(updateAmount(id, amount));\n  } else {\n    const response = yield call(api.get, \"/products/\".concat(id));\n\n    const data = _objectSpread({}, response.data, {\n      amount: 1,\n      priceFormatted: formatPrice(response.data.price)\n    });\n\n    yield put(addToCartSuccess(data));\n  }\n}\n\nexport default all([takeLatest('@cart/ADD_REQUEST', addToCart)]);","map":{"version":3,"sources":["/Users/sergiorosa_local/Documents/Flux-Architecture/src/store/modules/cart/sagas.js"],"names":["call","select","put","all","takeLatest","api","formatPrice","addToCartSuccess","updateAmount","addToCart","id","productExists","state","cart","find","p","stock","get","stockAmount","data","amount","response","priceFormatted","price"],"mappings":";AAAA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,UAAjC,QAAmD,oBAAnD;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAEA,SAASC,gBAAT,EAA2BC,YAA3B,QAA+C,WAA/C;;AAEA,UAAUC,SAAV,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA4B;AAC1B,QAAMC,aAAa,GAAG,MAAMV,MAAM,CAACW,KAAK,IACtCA,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACL,EAAF,KAASA,EAA9B,CADgC,CAAlC;AAIA,QAAMM,KAAK,GAAG,MAAMhB,IAAI,CAACK,GAAG,CAACY,GAAL,mBAAoBP,EAApB,EAAxB;AAEA,QAAMQ,WAAW,GAAGF,KAAK,CAACG,IAAN,CAAWC,MAA/B;;AAEA,MAAIT,aAAJ,EAAmB;AACjB,UAAMS,MAAM,GAAGT,aAAa,CAACS,MAAd,GAAuB,CAAtC;AAEA,UAAMlB,GAAG,CAACM,YAAY,CAACE,EAAD,EAAKU,MAAL,CAAb,CAAT;AACD,GAJD,MAIO;AACL,UAAMC,QAAQ,GAAG,MAAMrB,IAAI,CAACK,GAAG,CAACY,GAAL,sBAAuBP,EAAvB,EAA3B;;AAEA,UAAMS,IAAI,qBACLE,QAAQ,CAACF,IADJ;AAERC,MAAAA,MAAM,EAAE,CAFA;AAGRE,MAAAA,cAAc,EAAEhB,WAAW,CAACe,QAAQ,CAACF,IAAT,CAAcI,KAAf;AAHnB,MAAV;;AAMA,UAAMrB,GAAG,CAACK,gBAAgB,CAACY,IAAD,CAAjB,CAAT;AACD;AACF;;AAED,eAAehB,GAAG,CAAC,CAACC,UAAU,CAAC,mBAAD,EAAsBK,SAAtB,CAAX,CAAD,CAAlB","sourcesContent":["import { call, select, put, all, takeLatest } from 'redux-saga/effects';\nimport api from '../../../services/api';\nimport { formatPrice } from '../../../util/format';\n\nimport { addToCartSuccess, updateAmount } from './actions';\n\nfunction* addToCart({ id }) {\n  const productExists = yield select(state =>\n    state.cart.find(p => p.id === id)\n  );\n\n  const stock = yield call(api.get, `/stock/${id}`);\n\n  const stockAmount = stock.data.amount;\n\n  if (productExists) {\n    const amount = productExists.amount + 1;\n\n    yield put(updateAmount(id, amount));\n  } else {\n    const response = yield call(api.get, `/products/${id}`);\n\n    const data = {\n      ...response.data,\n      amount: 1,\n      priceFormatted: formatPrice(response.data.price),\n    };\n\n    yield put(addToCartSuccess(data));\n  }\n}\n\nexport default all([takeLatest('@cart/ADD_REQUEST', addToCart)]);\n"]},"metadata":{},"sourceType":"module"}